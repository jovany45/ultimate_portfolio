security:
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'

    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
        in_memory:
            memory:
                users:
                    admin:
                        password: '$2y$13$s.rnCtToiC5CCT52uB7WsOeK.5B0HTKlTdqutKXsBBA6KYOrzk6tK' # Remplacez par le hash de votre mot de passe
                        roles: 'ROLE_ADMIN'

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        main:
            lazy: true
            provider: in_memory
            form_login:
                login_path: app_login
                check_path: app_login
            logout:
                path: app_logout
                target: /

    # Easy way to control access for large sections 
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/admin, roles: ROLE_ADMIN }
        - { path: ^/memo/new, roles: ROLE_ADMIN }
        - { path: ^/blog/new, roles: ROLE_ADMIN }
        - { path: ^/project/new, roles: ROLE_ADMIN }
        - { path: ^/memo/edit, roles: ROLE_ADMIN }
        - { path: ^/blog/edit, roles: ROLE_ADMIN }
        - { path: ^/project/edit, roles: ROLE_ADMIN }
        - { path: ^/memo/delete, roles: ROLE_ADMIN }
        - { path: ^/blog/delete, roles: ROLE_ADMIN }
        - { path: ^/project/delete, roles: ROLE_ADMIN }

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon